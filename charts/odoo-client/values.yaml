# Valeurs par défaut
nameOverride: ""
fullnameOverride: ""

# Configuration client (pour multi-tenant)
client:
  name: "default-client"
  domain: "example.com"

# Configuration de l'image
image:
  # Option 1: Image custom (actuelle)
  repository: "ghcr.io/moka-tourisme/docker-moka"
  # Option 2: Image Odoo officielle
  # repository: "odoo"
  pullPolicy: IfNotPresent
  tag: "18.0"
  pullSecretName: "ghcr-secret"

# Réplicats
replicaCount: 1

# Service
service:
  type: ClusterIP
  port: 8069
  # Support longpolling pour Odoo officiel
  longpollingPort: 8072

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    # Support multi-database Odoo
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  
  # Hosts (sera surchargé par le script de déploiement)
  hosts:
    - host: "{{ .Values.client.domain }}"
      paths:
        - path: /
          pathType: Prefix
  
  # TLS Configuration
  tls:
    enabled: true
    # Auto-généré si cert-manager est utilisé
    secretName: "{{ include \"odoo-client.fullname\" . }}-tls"

# Configuration Odoo
odoo:
  # Authentification admin
  adminUser: "admin"
  adminPassword: "admin"
  
  # Base de données (sera auto-configuré avec PostgreSQL Bitnami)
  dbHost: ""  # Auto: {{ fullname }}-postgresql
  dbPort: 5432
  dbUser: "odoo"
  dbPassword: "odoo123"  # Doit correspondre à postgresql.auth.password
  dbName: ""  # Auto: {{ client.name }}_odoo ou postgresql.auth.database
  
  # Configuration Odoo avancée
  config:
    proxyMode: true
    listDb: false
    dbFilter: "^%d$"  # Sécurité multi-database
    workers: 2
    maxCronThreads: 1
    limitMemoryHard: 2684354560  # 2.5GB
    limitMemorySoft: 2147483648  # 2GB
    limitTimeInvest: 60
    limitTimReal: 120
    
  # Variables d'environnement supplémentaires
  extraEnv: {}
  
  # Configuration des addons
  addons:
    enabled: false
    path: "/mnt/extra-addons"
    persistence:
      enabled: false
      size: 1Gi
      storageClass: "local-path"

# Persistance pour les données Odoo
persistence:
  enabled: true
  size: 10Gi
  storageClass: "local-path"
  accessMode: ReadWriteOnce

# Configuration PostgreSQL Bitnami
postgresql:
  enabled: true
  
  # Authentification
  auth:
    postgresPassword: "postgres123"  # Mot de passe admin postgres
    username: "odoo"                 # Utilisateur Odoo
    password: "odoo123"              # Mot de passe Odoo (doit match odoo.dbPassword)
    database: "odoo"                 # Base de données par défaut
    
  # Architecture
  architecture: standalone  # ou "replication" pour HA
  
  # Configuration principale
  primary:
    # Persistance
    persistence:
      enabled: true
      size: 10Gi
      storageClass: "local-path"
      
    # Ressources
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 500m
        
    # Configuration PostgreSQL optimisée pour Odoo
    configuration: |
      # Connexions
      max_connections = 200
      superuser_reserved_connections = 3
      
      # Mémoire
      shared_buffers = 256MB
      effective_cache_size = 1GB
      work_mem = 4MB
      maintenance_work_mem = 64MB
      
      # WAL et Checkpoints
      wal_buffers = 16MB
      checkpoint_completion_target = 0.9
      min_wal_size = 1GB
      max_wal_size = 4GB
      
      # Planificateur
      random_page_cost = 1.1
      effective_io_concurrency = 200
      default_statistics_target = 100
      
      # Extensions
      shared_preload_libraries = 'pg_stat_statements'
      
      # Logging (production)
      log_destination = 'stderr'
      log_statement = 'none'
      log_min_duration_statement = 1000
      
    # Extensions PostgreSQL
    postgresqlExtendedConf:
      maxConnections: "200"
      sharedBuffers: "256MB"
      effectiveCacheSize: "1GB"
      
    # Init scripts (optionnel)
    initdbScripts: {}
    
    # Probes de santé
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

  # Métriques Prometheus (optionnel)
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
    prometheusRule:
      enabled: false

  # Réplication (désactivée pour simplifier)
  readReplicas:
    replicaCount: 0

  # Sécurité
  networkPolicy:
    enabled: false
    
  # Service account
  serviceAccount:
    create: true
    name: ""

# Ressources pour Odoo
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Sondes de santé pour Odoo
livenessProbe:
  enabled: true
  httpGet:
    path: /web/database/selector
    port: http
  initialDelaySeconds: 120
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 5

readinessProbe:
  enabled: true
  httpGet:
    path: /web/database/selector
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

startupProbe:
  enabled: true
  httpGet:
    path: /web/database/selector
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30  # 5 minutes max pour le démarrage

# Sécurité
securityContext:
  runAsNonRoot: true
  runAsUser: 101  # User Odoo standard
  fsGroup: 101

podSecurityContext:
  fsGroup: 101

# Sélecteurs de nœuds
nodeSelector: {}
tolerations: []
affinity: {}

# Mise à jour
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

# HPA (Horizontal Pod Autoscaler) - Optionnel
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
